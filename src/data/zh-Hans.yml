Home: "主页"
Download: "下载"
Start: "入门"
Reference: "参考文献"
Libraries: "程式库"
Learn: "学习"
Examples: "范例"
Books: "书籍"
Community: "社群"
Contribute: "贡献"
Forum: "论坛"

footer1: "p5.js 的原作者为"
footer2: "并在"
footer3: "和"
footer4: "的支持下由其合作社群所开发。形象及平面设计"

tagline1: "Processing 的趣味结合 JavaScript 的俏皮"
tagline2: "Processing 的简易性结合 JavaScript 的灵活性"
tagline3: "Processing 的直觉结合 JavaScript 的力量"
tagline4: "Processing 的创意结合 JavaScript 的活跃性"
tagline5: "Processing 的社群结合 JavaScript 的社群"
tagline6: "Processing 的力量结合 JavaScript 的范围"

home:
  Download: "下载"
  Start: "入门"
  Reference: "参考文献"
  Libraries: "程式库"
  Learn: "学习"
  Community: "社群"
  p1x1: "你好！p5.js 是个 Javascript 程式库，它起源于"
  p1x2: "的原旨：让艺术家、设计师、教育家和初学者能更容易学习及使用程序设计，同时将其重新释义给今日的网络环境。"
  p2x1: "借着 Processing 原有的绘图册比喻，p5.js 提供全套绘图功能，但除了原有的画布，整个浏览器页面也能成为您绘图的一部分！为此，p5.js 同时提供一系列附加"
  libraries: "程式库"
  p2x2: "以方便与 HTML5 物件"
  interact: "互动"
  p2x3: "，其中包括文字、输入、影像、网络摄像头、声音等。"
  p3x1: "p5.js is a new interpretation, not an emulation or port, and it is in active development."
  p3x2: "Try it out now in the new p5.js Web Editor!"
  sketch_by: "作者"
  sketch_info: "p5js.org 现已有中文版本"
  sketch_info_link: "https://medium.com/processing-foundation/p5-js-%E7%9A%84%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91-%E4%B8%BA%E6%94%AF%E6%8C%81%E6%9B%B4%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%E7%BF%BB%E8%AF%91%E5%81%9A%E5%87%86%E5%A4%87-a0fa94da770f"

copyright:
  copyright1: "p5.js 编程库是个免费开源的软件；您可以在 Free Software Foundation 的"
  copyright2: " 2.1版条款下分布及/或修改该软件。"
  copyright3: "参考文献是在"
  copyright4: "许可下允许任何人重用该文献只要该用处为非商业化及原作者有被归功。"

get started:
  get-started-title: "入门"
  get-started1: "本页面将引导您设置一个 p5.js 项目并制作您第一个 sketch。"
  get-started2: "If you'd like to start with the new "
  get-started3: "p5.js Web Editor"
  get-started4: ", you can jump down to"
  get-started5: "Your First Sketch"
  download-title: "下载及文件格局"
  download1: "最简易的起点是使用"
  download2: "p5.js 完整版"
  download3: "下载所提供的空白范例。"
  download4: "查看 index.html 您可以发现其中有个 p5.js 的链接。如果您想要使用极简化的档案（以加速网页加载的速度），将链接档案名改为 p5.min.js"
  download5: "另外，您也可以选择链接去网络上的 p5.js 文档。所有 p5.js 版本都被上载到多个 CDN (Content Delivery Network) 上，您可在此链接参考所有 p5.js 版本："
  download6: "。接下来您只需要将链接改为："
  download7: "一个极简但完整的 HTML 档案如下："
  download8: "您也可以使用以下来自"
  download9: "的模版。"
  environment-title: "编程环境"
  environment1: "您可以使用任何"
  environmentlink: "https://zh.wikipedia.org/wiki/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8"
  environment2: "代码编程器"
  environment3: "。以下为设置"
  environment4: "的步骤。其他不错的代码编程器包括"
  environment5: "和"
  environment6: "If you are a screen reader user and not using the p5 web editor, you may want to use "
  environment7: " or "
  environment8: "开启 Sublime。选择 File 目录项目然后选择 Open... 接着在对话框中选择含有您的 .html 及 .js 档案的文件夹。在窗口左边的文件栏您应该能看到文件夹的名字在最上方而往下都是该文件夹里面所含的档案。"
  environment9: "点击 sketch.js 档案即会在右边开启该档案，您也能在这时更改该档案。"
  environment10: "p5 starter code opened up in sublime editor."
  environment11: "在文件浏览器内双击 index.html 以在您的网页浏览器内开启该档案，或您也可以直接在网页浏览器内的网址栏输入："
  environment12: "file:///html文件在硬盘上的位置/"
  environment13: "以查看您的绘图。"
  your-first-sketch-title: "您的第一个绘图"
  your-first-sketch-intro1: "如果您使用过 Processing，可参考"
  your-first-sketch-intro2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  your-first-sketch-intro3: "Processing 过度教程（英文页面）"
  your-first-sketch-intro4: "在代码编程器内输入："
  your-first-sketch2: "这一行代码表示〝在离左边 50 像素及里上边 50 像素的位置画个高度和阔度都为 80 像素的椭圆形〞。"
  your-first-sketch3: "保存该绘图的档案并刷新您浏览器的页面，这时如果您成功输入以上范例，您会在浏览器内看到如下页面："
  your-first-sketch4: "Note: If you are using a screen reader, you must either turn on the accessible outputs in the p5 online editor, outside the editor you must add the accessibility library in your html. To learn about "
  your-first-sketch5: "using p5 with a screen reader click here"
  your-first-sketch6: " and to learn more about "
  your-first-sketch7: "the accessibility library here"
  your-first-sketch8: "canvas has a circle of width and height 50 at position 80 x and 80 y"
  your-first-sketch9: "如果您没看见任何东西，这可能表示在输入代码时出现了错误。这时您需要确保您所输入的代码和以上范例完全相同无误：数字必须被输入在括号内，他们之间也该由逗号分开，而行列尾端也该有个分号。"
  your-first-sketch10: "刚起步编程其中一个比较难的部分是您必须非常注意编程语言的语法，网页浏览器通常没办法猜出您想要表达的意思并时常会挑剔编程码标点符号的位置。只要多加练习您自然也会习惯该语法。取决于您使用的网页浏览器，您能开启 JavaScript \"console\"（控制台）查看错误信息。比如说 Chrome 您能在 View > Developer > JavaScript Console 目录项目中开启控制台。"
  your-first-sketch11: "接下来，我们可以编写一个更有趣的绘图。删除上一个范例的所有代码然后输入以下："
  your-first-sketch12: "这程式会制作一个 640 像素宽 480 像素高的画布，然后在鼠标的位置画白色圆圈。当您按下滑鼠按钮时，圆圈将会变为黑色。现在您可以试着移动滑鼠及点击滑鼠按钮。"
  your-first-sketch13: "canvas has multiple circles drawn on it following the path of the mouse"
  what-next-title: "下一步"
  processing-transition1: "参阅"
  processing-transition2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  processing-transition3: "Processing 过度教程（英文页面）"
  processing-transition4: "以了解如何将 Processing 绘图转换为 p5.js 绘图以及它们之间的差别。"
  reference1: "查看"
  reference2: "参考文献"
  reference3: "以更深入了解各个功能。"
  learn1: "浏览"
  learn2: "学习"
  learn3: "及"
  learn4: "范例"
  learn5: "页面以了解更多。"
  learn6: "If you wish to use p5 with a screenreader, check out the "
  learn7: "p5 with a screenreader tutorial"
  book1: "这教程一部分源自于《 Getting Started with p5.js 》，作者为 Lauren McCarthy、Casey Reas 及 Ben Fry， O'Reilly / Make 2015。著作权"
  book2: 2015 Lauren McCarthy、Casey Reas 及 Ben Fry。版权所有。

download:
  Download: "下载"
  complete-library-title: "完整程式库"
  p5.js-complete: "p5.js 完整版"
  includes-1: "包含"
  includes-2: "p5.js、p5.dom.js、p5.sound.js 及空白范例"
  includes-3: "版本"
  single-files-title: "单一文件"
  single-file: "单一文件："
  p5.js-uncompressed: "易读版本"
  compressed: "极简化版本"
  link: "链接："
  statically-hosted-file: "静态链接文件"
  editor-title: "Editor"
  p5.js-editor: "p5.js Web Editor"
  editor-includes: "Start coding using the p5.js Web Editor, no setup required!"
  etc-title: "其他"
  older-releases: "旧版本/更新日志"
  report-bugs: "报告缺陷"
  supported-browsers: "浏览器支持"
  support-title: "支持 p5.js!"
  support-1: "p5.js 是个免费及开源的软件。我们想要使我们的社群尽可能开放及包容。您能成为 Processing Foundation 的"
  support-2: "会员"
  support-3: "以帮我助们的工作，您能以个人、工作室或教育机构的身份参与。您也能单"
  support-4: "捐款"
  support-5: "而不需要成为会员。"
  support-6: "个人"
  support-7: "$25"
  support-8: "工作室"
  support-9: "$250"
  support-10: "教育机构"
  support-11: "$5/学生或 $500"
  support-12: "您的会员籍将帮助软件开发（支持 p5.js、Processing.py、Processing 给 Android 与 ARM 设备、教育资源如编程范例与教程、"
  support-13: "奖学金"
  support-14: "及"
  support-15: "社群活动）"
  support-16: "。我们需要您的帮助！"
  support-17: "p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）"
  support-18: "Processing Fellow Saskia Freeke 在伦敦组织的 Code Liberation x Processing （代码解放 x Processing）研讨会（图像由：Code Liberation Foundation）"
  support-19: "SFPC主持的 “学习如何教导，教导如何学习” 会议（图像由Kira Simon-Kennedy）"
  support-20: "Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami 组织的研讨会（图像由：Christian Arévalo Photography）"
  support-21: "Taeyoon Choi 及 ASL（美式手语）翻译员在 Signing Coders p5.js（p5.js 手语编程员）研讨会（图像由：Taeyoon Choi）"
  support-22: "Google Summer of Code（Google 夏日程式码大赛）开幕（图像由：Taeyoon Choi）"
  support-23: "Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami 组织的研讨会（图像由：Christian Arévalo Photography）"
  support-24: "Luisa Pereira 及 Yeseul Song 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi 带领（图像由：Taeyoon Choi）"
  support-25: "p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）"
  support-26: "Processing Fellow Digital Citizens Lab 在 International Center of Photography 所主持的 STEM（科学、科技、工程、数学）教学小组（图像由：International Center of Photography）"
  support-27: "在智利圣地亚哥的 p5.js 研讨会的参与者，由 Aarón Montoya-Moraga 带领（图像由：Aarón Montoya-Moraga）"
  support-28: "Claire Kearney-Volpe 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi 带领（图像由：Taeyoon Choi）"
  support-29: "Processing Foundation Fellow DIY Girls 在洛杉矶举办的创意编程课程（图像由：DIY Girls）"
  support-30: "Processing Fellow Digital Citizens Lab"
  support-31: "UCLA DMA 及 NYU ITP 的 p5.js 聚会"
  support-32: "Processing Foundation"
  support-33: "在原本的 Processing 软件多过十年的工作后成立于 2012 年。Processing Foundation 原旨为提升视觉艺术界的软件素养及提升科技界的视觉素养 — 并让这些领域更加接近不同的社群。我们的目标是赋予来自不同兴趣及背景的人学习编程与用编程制作创意作品的权利，尤其是那些可能无法得到这些工具及资源的人。"

learn:
  learn-title: "学习"
  learn1: "以下教程将提供更多深入及详细的步骤，专注于特定的主题。请参考"
  learn2: "范例页面"
  learn3: "以查看 p5.js 多种功能的简单范例。"
  introduction-to-p5js-title: "p5.js 简介"
  hello-p5js-title: "Hello p5.js"
  hello-p5js: "This short video will introduce you to the library and what you can do with it."
  getting-started-title: "入门简介"
  getting-started: "欢迎来到 p5.js！<br>这简介将涵盖 p5.js 的基本设置。"
  p5js-overview-title: "一览 p5.js"
  p5js-overview: "p5.js 主要功能的介绍"
  p5js-processing-title: "p5.js 及 Processing"
  p5js-processing: "两者之间的差别及如何将两者之间互相转换。"
  p5-screen-reader-title: "p5 with a screen reader"
  p5-screen-reader: "Setting up p5 so that it can be used easily with a screen reader."
  using-local-server-title: "本地伺服器"
  using-local-server: "如何在 Mac OSX、Windows 或 Linux 上设置本地伺服器。"
  connecting-p5js-title: "链接 p5.js"
  creating-libraries-title: "Creating libraries"
  creating-libraries: "Creating p5.js addon libraries."
  nodejs-and-socketio-title: "node.js 及 socket.io"
  nodejs-and-socketio: "链接 node.js 伺服器及 p5.js，通过 socket.io 通讯。"
  programming-topics-title: "编程问题"
  beyond-the-canvas-title: "画布之外"
  beyond-the-canvas: "创建及控制画布以外的元素。"
  3d-webgl-title: "3D/WebGL"
  3d-webgl: "使用 p5.js WebGL 模式制作高级图形程式。"
  color-title: "颜色"
  color: "数码颜色的简介。"
  coordinate-system-and-shapes-title: "坐标系统与图形"
  coordinate-system-and-shapes: "利用坐标系统绘制简单图形。"
  interactivity-title: "互动性"
  interactivity: "鼠标与键盘的互动简介。"
  program-flow-title: "程序流程"
  program-flow: "p5.js 控制程序流程简介。"
  curves-title: "曲线"
  curves: "介绍 p5.js 中的三种曲线：弧形，样条曲线和 Bézier 曲线。"
  becoming-a-better-programmer-title: "成为更好的程式设计师"
  debugging-title: "调试"
  debugging: "调试程序的简介。"
  optimizing-title: "优化 p5.js 程式"
  optimizing: "此教程包含技巧及窍门以进一步优化您的程式，使它执行得更快更顺畅。"
  test-driven-development-title: "单元测试及测试驱动开发"
  test-driven-development: "避免安装时不必要的烦恼。什么是单元测试？如何使用单元测试？作者 Andy Timmons。"
  contributing-to-the-community-title: "回馈社群"
  development-title: "开发"
  development: "开发设置简介及一览。"
  looking-inside-title: "窥看 p5"
  looking-inside: "一个简单易懂的教程，当中含括了 p5.js 源代码的文件格局及开发工具，作者 Luisa Pereira。"
  writing-tutorial-title: "编写教程"
  writing-tutorial: "编写 p5.js 教程的指南。"
  writing-a-tutorial-title: "p5.js 回馈指南"
  writing-a-tutorial-author: "教程作者为 Tega Brain。"
  writing-a-tutorial-1: "我们欢迎教育家、合作者和一般爱好者开发更多 p5.js 教程。p5.js 旨在让创意编程及开源软件开发更易接近及吸引更多元化的社群，同时我们也很高兴能够公开的发布 p5.js 开发的完整过程及教程。我们现有的教程含括了各种课题如：学习使用 p5.js、编程技巧及如何帮助开发开源项目。"
  writing-a-tutorial-2: "我们欢迎任何人提交全新教程，这份指南将包括新教程的提议、准备和提交的所需步骤。"
  writing-a-tutorial-how-start-title: "如何开始："
  writing-a-tutorial-how-start-1: "先确定您所建议的课题尚未被涵盖，在此链接有"
  writing-a-tutorial-how-start-2: "一个列表"
  writing-a-tutorial-how-start-3: "列出了正在进行中的教程。如果您想开发的课题被列为正在进行中 (in progress)，您或许能帮助完成该项目或为现有的项目做预备发布的工作，您只需联络我们。"
  writing-a-tutorial-how-start-4: "如果您的课题尚未被涵盖及尚未被列为正在进行中，请寄份电子邮件去 education@p5js.org 并简略的讲述您所建议的教程。"
  writing-a-tutorial-how-prepare-title: "如何准备网上 p5.js 教程："
  writing-a-tutorial-how-prepare-1: "当您以准备发布您的教程，请按着以下步骤准备您的教程给 p5.js 的网页。"
  writing-a-tutorial-how-prepare-2: "将您的教程写在一个命名为 tutorial-name.hbs 的文件并跟从"
  writing-a-tutorial-how-prepare-3: "这基本结构"
  writing-a-tutorial-how-prepare-4: "。如该文件所示，它必须有以下开端："
  writing-a-tutorial-how-prepare-5: "您的教程文件夹将被置放在 p5.js 网站一个命名为“tutorials”的文件夹内。index.hbs 是"
  writing-a-tutorial-how-prepare-6: "p5.js 教程的主页"
  writing-a-tutorial-how-prepare-7: "而 test-tutorial.hbs 为空白范例教程。"
  writing-a-tutorial-how-prepare-8: "所有内容必须被包含在以下标签内："
  writing-a-tutorial-how-prepare-9: "内容格式可以使用 &lt;h1&gt;、&lt;h2&gt; 及 &lt;p&gt; 段落标签定义，如"
  writing-a-tutorial-how-prepare-10: "空白范例教程所示。"
  writing-a-tutorial-how-prepare-11: "如果您的教程包含图像，它们必须被置放在 p5 网站的 asset 文件夹，该文件夹位于 src/assets/learn/test-tutorial/images 如以下所示。"
  writing-a-tutorial-how-prepare-12: "以在 HTML 页面内格式化您的源代码，请使用以下标签："
  writing-a-tutorial-embedding-title: "嵌入 p5.js 绘图"
  writing-a-tutorial-embedding-1: "使用 p5.js 的一个好处是您可以制作动画驱动、互动性或可编辑的教程，方便更简易的演示程式设计概念。您的范例必须是 p5.js 绘图而它能用以下两种方式嵌入在您的教程中。"
  writing-a-tutorial-embedding-2: "如果该范例需保持可编辑性，如在 p5.js 网站的"
  writing-a-tutorial-embedding-3: "参考文献"
  writing-a-tutorial-embedding-4: "内，该 p5 绘图必须使用 p5.js 部件以嵌入在 HTML 页面内，请使用"
  writing-a-tutorial-embedding-5: "这指南"
  writing-a-tutorial-embedding-6: "以了解如何使用该部件嵌入 p5.js 绘图，部件作者为"
  writing-a-tutorial-embedding-7: "。您也可以在"
  writing-a-tutorial-embedding-8: "空白范例教程内"
  writing-a-tutorial-embedding-9: "查看使用范例。"
  writing-a-tutorial-embedding-10: "如果该范例必须是动画驱动或互动性的但并不需要是可编辑的，该 p5.js 绘图需使用 iframe 以嵌入在页面内，如以下所示。"
  writing-a-tutorial-iframe-title: "使用 iframe 嵌入 p5 绘图"
  writing-a-tutorial-iframe-1: "iframe 让您能在原有的页面上开启一个通往另一个页面的窗口，同时该页面并不能直接和原有页面互动。在此例， 原有页面内会被嵌入一个含有您 p5.js 绘图的 index.html 窗口。"
  writing-a-tutorial-iframe-2: "在 /src/assets/learn 文件夹内，将您的 p5 绘图置放在一个命名为您的绘图名的文件夹内如以下截图所示。这文件夹是您置放所有 iframe 内将使用的图像及 p5 绘图的地方。"
  writing-a-tutorial-iframe-3: "在含有您的 p5 范例的子文件夹内应该含有一个 sketch.js 文件及一个 embed.html 文件。"
  writing-a-tutorial-iframe-4: "请确保 embed.html 内的 p5 程式库有正确的链接。如果您的文件结构和以上相同，p5.js 程式库的链接将会是 \"../../../js/p5.min.js\"。"
  writing-a-tutorial-iframe-5: "这时你可以将 p5.js 绘图文件以 iframe 的方式嵌入在您的教程的 .hbs 文件中。iframe 嵌入代码如下："
  writing-a-tutorial-iframe-6: "以格式化 iframe，您可以将以下包括在文件内或使用样式表："
  writing-a-tutorial-iframe-7: "在以下链接您可以直接查看绘图："
  writing-a-tutorial-iframe-8: "而在以下您可以查看绘图被嵌入在 p5 网页中："
  writing-a-tutorial-iframe-9: "还有一项您需要注意的是您必须设置 iframe 的大小，以确保其大小不会随着窗口大小而改变。"
  writing-a-tutorial-iframe-10: "另外，p5.js 程式库的文件链接并不是在 .eps 文件内（如其他教程），而是在您的 HTML 页面内（通常是 embed.html）。"
  writing-a-tutorial-iframe-11: "更多关于嵌入 p5.js 绘图的信息可在"
  writing-a-tutorial-embed-iframe-12: "以下链接查找。"
  writing-a-tutorial-finishing-title: "结束"
  writing-a-tutorial-finishing-1: "一旦您完成编辑您的教程并且您的教程已经被许可，分叉 p5.js 网站的代码库，如以上所示的步骤准备您的教程然后开启一个 pull request 给 p5.js 网站的代码库以便我们能发布您的教程！"
  writing-a-tutorial-finishing-2: "谢谢！"
  color-description1: "This tutorial is from the book Learning Processing by Daniel Shiffman, published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It was ported to P5 by Kelly Chang. If you see any errors or have comments, "
  color-description2: " please let us know."
  color-title: "Color"
  color-p1x1: "In the digital world, when we want to talk about a color, precision is required. Saying \"Hey, can you make that circle bluish-green?\" will not do. Color, rather, is defined as a range of numbers. Let's start with the simplest case: black & white or grayscale. 0 means black, 255 means white. In between, every other number—50, 87, 162, 209, and so on—is a shade of gray ranging from black to white."
  color-p2x1: "By adding the "
  color-p2x2: " and "
  color-p2x3: " functions before something is drawn, we can set the color of any given shape. There is also the function "
  color-p2x4: ", which sets a background color for the window. Here's an example."
  color-code1: "background(255);    // Setting the background to white \n stroke(0);          // Setting the outline (stroke) to black \n fill(150);          // Setting the interior of a shape (fill) to grey \n rect(50,50,75,100); // Drawing the rectangle"
  color-p3x1: "Stroke or fill can be eliminated with the functions: "
  color-p3x2: " and "
  color-p3x3: ". Our instinct might be to say \"stroke(0)\" for no outline, however, it is important to remember that 0 is not \"nothing\", but rather denotes the color black. Also, remember not to eliminate both—with "
  color-p3x4: " and "
  color-p3x5: ", nothing will appear!"
  color-p4x1: "In addition, if we draw two shapes, p5.js will always use the most recently specified stroke and fill, reading the code from top to bottom."
  color-rgb-title: "RGB Color"
  color-rgb-p1x1: "Remember finger painting? By mixing three \"primary\" colors, any color could be generated. Swirling all colors together resulted in a muddy brown. The more paint you added, the darker it got. Digital colors are also constructed by mixing three primary colors, but it works differently from paint. First, the primaries are different: red, green, and blue (i.e., \"RGB\" color). And with color on the screen, you are mixing light, not paint, so the mixing rules are different as well."
  color-rgb-li1: "Red + Green = Yellow"
  color-rgb-li2: "Red + Blue = Purple"
  color-rgb-li3: "Green + Blue = Cyan (blue-green)"
  color-rgb-li4: "Red + Green + Blue = White"
  color-rgb-li5: "No colors = Black"
  color-rgb-p2x1: "This assumes that the colors are all as bright as possible, but of course, you have a range of color available, so some red plus some green plus some blue equals gray, and a bit of red plus a bit of blue equals dark purple. While this may take some getting used to, the more you program and experiment with RGB color, the more it will become instinctive, much like swirling colors with your fingers. And of course you can't say \"Mix some red with a bit of blue,\" you have to provide an exact amount. As with grayscale, the individual color elements are expressed as ranges from 0 (none of that color) to 255 (as much as possible), and they are listed in the order R, G, and B. You will get the hang of RGB color mixing through experimentation, but next we will cover some code using some common colors."
  color-transparency-title: "Color Transparency"
  color-transparency-p1x1: "In addition to the red, green, and blue components of each color, there is an additional optional fourth component, referred to as the color's \"alpha\". Alpha means transparency and is particularly useful when you want to draw elements that appear partially see-through on top of one another. The alpha values for an image are sometimes referred to collectively as the \"alpha channel\" of an image."
  color-transparency-p2x1: "It is important to realize that pixels are not literally transparent, this is simply a convenient illusion that is accomplished by blending colors. Behind the scenes, p5.js takes the color numbers and adds a percentage of one to a percentage of another, creating the optical perception of blending. (If you are interested in programming \"rose-colored\" glasses, this is where you would begin.)"
  color-transparency-p3x1: "Alpha values also range from 0 to 255, with 0 being completely transparent (i.e., 0% opaque) and 255 completely opaque (i.e., 100% opaque)."
  color-custom-ranges-title: "Custom Color Ranges"
  color-custom-ranges-p1x1: "RGB color with ranges of 0 to 255 is not the only way you can handle color in p5.js, in fact, it allows us to think about color any way we like. For example, you might prefer to think of color as ranging from 0 to 100 (like a percentage). You can do this by specifying a custom "
  color-custom-ranges-p2x1: "The above function says: \"OK, we want to think about color in terms of red, green, and blue. The range of RGB values will be from 0 to 100.\""
  color-custom-ranges-p3x1: "Although it is rarely convenient to do so, you can also have different ranges for each color component:"
  color-custom-ranges-p4x1: "Now we are saying \"Red values go from 0 to 100, green from 0 to 500, blue from 0 to 10, and alpha from 0 to 255.\""
  color-custom-ranges-p5x1: "Finally, while you will likely only need RGB color for all of your programming needs, you can also specify colors in the HSB (hue, saturation, and brightness) mode. Without getting into too much detail, HSB color works as follows:"
  color-custom-ranges-li1x1: "Hue"
  color-custom-ranges-li1x2: "—The color type, ranges from 0 to 255 by default."
  color-custom-ranges-li2x1: "Saturation"
  color-custom-ranges-li2x2: "—The vibrancy of the color, 0 to 255 by default."
  color-custom-ranges-li3x1: "Brightness"
  color-custom-ranges-li3x2: "—The, well, brightness of the color, 0 to 255 by default."
  color-custom-ranges-p6x1: "With "
  color-custom-ranges-p6x2: " you can set your own ranges for these values. Some prefer a range of 0-360 for hue (think of 360 degrees on a color wheel) and 0-100 for saturation and brightness (think of 0-100%)."
  coordinate-system-description1: "This tutorial is from the book "
  coordinate-system-description2: "Learning Processing"
  coordinate-system-description3: " by Daniel Shiffman, published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It was ported to p5.js by Alex Yixuan Xu. If you see any errors or have comments, please "
  coordinate-system-description4: "let us know"
  coordinate-system-description5: "."
  coordinate-system-description-title: "Coordinate System and Shapes"
  coordinate-system-description-p1x1: "Before we begin programming with p5, we must first channel our eighth grade selves, pull out a piece of graph paper, and draw a line. The shortest distance between two points is a good old fashioned line, and this is where we begin, with two points on that graph paper."
  coordinate-system-description-p2x1: "The above figure shows a line between point A (1,0) and point B (4,5). If you wanted to direct a friend of yours to draw that same line, you would give them a shout and say \"draw a line from the point one-zero to the point four-five, please.\" Well, for the moment, imagine your friend was a computer and you wanted to instruct this digital pal to display that same line on its screen. The same command applies (only this time you can skip the pleasantries and you will be required to employ a precise formatting). Here, the instruction will look like this:"
  coordinate-system-description-p3x1: "Even without having studied the syntax of writing code, the above statement should make a fair amount of sense. We are providing a command (which we will refer to as a \"function\") for the machine to follow entitled \"line.\" In addition, we are specifying some arguments for how that line should be drawn, from point A (1,0) to point B (4,5). If you think of that line of code as a sentence, the function is a verb and the arguments are the objects of the sentence. The code sentence also ends with a semicolon instead of a period."
  coordinate-system-description-p4x1: "The key here is to realize that the computer screen is nothing more than a fancier piece of graph paper. Each pixel of the screen is a coordinate - two numbers, an \"x\" (horizontal) and a \"y\" (vertical) - that determines the location of a point in space. And it is our job to specify what shapes and colors should appear at these pixel coordinates."
  coordinate-system-description-p5x1: "Nevertheless, there is a catch here. The graph paper from eighth grade (\"Cartesian coordinate system\") placed (0,0) in the center with the y-axis pointing up and the x-axis pointing to the right (in the positive direction, negative down and to the left). The coordinate system for pixels in a computer window, however, is reversed along the y-axis. (0,0) can be found at the top left with the positive direction to the right horizontally and down vertically."
  coordinate-system-simple-shapes-title: "Simple Shapes"
  coordinate-system-simple-shapes-p1x1: "The vast majority of the programming examples you'll see with p5 are visual in nature. These examples, at their core, involve drawing shapes and setting pixels. Let's begin by looking at four primitive shapes."
  coordinate-system-simple-shapes-p2x1: "For each shape, we will ask ourselves what information is required to specify the location and size (and later color) of that shape and learn how p5 expects to receive that information. In each of the diagrams below, we'll assume a window with a width of 10 pixels and height of 10 pixels. This isn't particularly realistic since when you really start coding you will most likely work with much larger windows (10x10 pixels is barely a few millimeters of screen space.) Nevertheless for demonstration purposes, it is nice to work with smaller numbers in order to present the pixels as they might appear on graph paper (for now) to better illustrate the inner workings of each line of code."
  coordinate-system-simple-shapes-p3x1: "A "
  coordinate-system-simple-shapes-p3x2: " is the easiest of the shapes and a good place to start. To draw a point, we only need an x and y coordinate."
  coordinate-system-simple-shapes-p4x1: "A "
  coordinate-system-simple-shapes-p4x2: " isn't terribly difficult either and simply requires two points: (x1,y1) and (x2,y2):"
  coordinate-system-simple-shapes-p5x1: "Once we arrive at drawing a "
  coordinate-system-simple-shapes-p5x2: ", things become a bit more complicated. In p5, a rectangle is specified by the coordinate for the top left corner of the rectangle, as well as its width and height."
  coordinate-system-simple-shapes-p6x1: "A second way to draw a rectangle involves specifying the centerpoint, along with width and height. If we prefer this method, we first indicate that we want to use the "
  coordinate-system-simple-shapes-p6x2: " mode before the instruction for the rectangle itself. Note that p5 is case-sensitive."
  coordinate-system-simple-shapes-p7x1: "Finally, we can also draw a rectangle with two points (the top left corner and the bottom right corner). The mode here is "
  coordinate-system-simple-shapes-p7x2: ". Note this example gives the same result on screen as the example above."
  coordinate-system-simple-shapes-p8x1: "Once we have become comfortable with the concept of drawing a rectangle, an "
  coordinate-system-simple-shapes-p8x2: " is a snap. In fact, it is identical to "
  coordinate-system-simple-shapes-p8x3: " with the difference being that an ellipse is drawn where the bounding box of the rectangle would be. The default mode for "
  coordinate-system-simple-shapes-p8x4: " is "
  coordinate-system-simple-shapes-p8x5: ", rather than "
  coordinate-system-simple-shapes-p8x6: "."
  coordinate-system-simple-shapes-p9x1: "It is important to acknowledge that these ellipses do not look particularly circular. p5 has a built-in methodology for selecting which pixels should be used to create a circular shape. Zoomed in like this, we get a bunch of squares in a circle-like pattern, but zoomed out on a computer screen, we get a nice round ellipse. p5 also gives us the power to develop our own algorithms for coloring in individual pixels (in fact, we can already imagine how we might do this using \"point\" over and over again), but for now, we are content with allowing the \"ellipse\" statement to do the hard work. (For more about pixels, start with: the "
  coordinate-system-simple-shapes-p9x2: "pixels reference page"
  coordinate-system-simple-shapes-p9x3: ", though be warned this is a great deal more advanced than this tutorial.)"
  coordinate-system-simple-shapes-p10x1: "Now let's look at what some code with shapes in more realistic setting, with window dimensions of 200 by 200. Note the use of the createCanvas() function to specify the width and height of the window."

test-tutorial:

libraries:
  Libraries: "程式库"
  p5.dom: "p5.dom 让您在画布以外与 HTML5 物件互动，这包括视屏、音频、摄像头、输入框及文字。"
  p5.sound: "p5.sound 使用 Web Audio 扩展 p5 的功能，提供音频输入、播放、分析及合成功能。"
  p5.accessibility: "p5.accessibility makes the p5 canvas more accessible to people who are blind and visually impaired."
  Contributed: "社群贡献程式库"
  p5.serial1: "p5.serial 让不同设备使用串联通讯 (RS-232) 与在网页浏览器内的 p5 绘图沟通。作者为"
  p5.serial2: "，并包括以下作者的贡献："
  p5.serial3: "及"
  p5.collide2D: "p5.collide2D 提供一系列工具适用于计算在 p5.js 内的 2D 几何形状的碰撞检测。作者为"
  rita.js: "RiTa.js 提供语言分析功能并也提供生成文字的功能。作者为"
  p5.geolocation: "p5.geolocation 提供给 p5.js 获取、观察、计算使用者地理位置及地理围栏的功能。作者为"
  p5.speech: "p5.speech 提供简单易用的 Web Speech 及语音识别的 API，使制作能说能听的绘图更加容易。作者为"
  p5.bots: "p5.bots 让您通过网页浏览器和 Arduino（或其他微处理器）互动。您可以使用传感器资料来驱动绘图会使用绘图来驱动 LED、马达等等！作者为"
  grafica.js: "grafica.js 让您在您的 p5.js 绘图中添加简单但高度可配置的 2D 图表。作者为"
  p5.play: "p5.play 提供图像、动画、输入及碰撞检测功能以方便制作游戏或游戏类程式。作者为"
  p5.gui: "p5.gui 提供您的 p5.js 绘图一系列图形用户界面。作者为"
  p5.gibber: "p5.gibber 提供快速音乐排序及音频合成功能。作者为"
  p5.particle: "Particle 及 Fountain 物件可以用以制作数据驱动效果，该数据可来自使用者互动或 JSON 文件。作者为"
  p5.scribble: "绘制看起来粗略的 2D 形状作者为 Janneck Wullschleger，Processing 原有程式库的代码移植。"
  p5.tiledmap1: "p5.tiledmap 提供绘制及便利功能以在绘图中加入由"
  p5.tiledmap2: "制作的地图。作者为"
  p5.dimensions1: "p5.dimensions 扩展 p5.js 的向量功能以包括更高维数的计算。作者为"
  p5.dimensions2: "及"
  p5.scenemanager: "p5.SceneManager 帮助您制作有多个状态/场景的绘图。各个场景就比如一个在主要绘图内的绘图。作者为"
  mappa: "Mappa 提供一系列给静态地图、重叠地图及地理数据的工具。特别适用于制作使用地理位置的应用程式。作者为"
  p5.func: "p5.func 是个提供新物件及时间、频率和空间函数操作的 p5 扩展程式库。作者为"
  p5.voronoi: "p5.voronoi provides a set of tools to draw and utilize voronoi diagrams in your p5.js sketches."
  using-a-library-title: "如何使用程式库"
  using-a-library1: "p5.js 程式库可以是任何扩展或延伸 p5.js 核心功能的 JavaScript 代码，它们主要分为两种。核心程式库（"
  using-a-library2: "及"
  using-a-library3: "）是 p5.js 正式发布组的一部分，而社群贡献程式库是由 p5.js 社群成员持有、开发及维持的。"
  using-a-library4: "如果您想在您的绘图内加入任何附加程式库，您只需在 HTML 文件内添加程式库的链接，此链接必须发生在 p5.js 的链接之后。一个 HTML 范例如下："
  create-your-own-title: "制作附加程式库"
  create-your-own1: "p5.js 欢迎任何人所制作的附加程式库！请参考"
  create-your-own2: "程式库编辑教程（英文页面）"
  create-your-own3: "以了解更多关于如何制作附加程式库的步骤。"

community:
  community-title: "社群"
  community-statement-title: "p5.js 社群宣言"
  community-statement1: "p5.js 是个对探索使用科技创作艺术及设计感兴趣的社群。"
  community-statement2: "我们声援及支持所有人，不论他们来自不同性别认同、性取向、种族、国籍、语言、神经型、大小、能力、阶级、宗教、文化、次文化、政治观点、年龄、技能等级、职业或背景。我们了解并不是所有人都有多余的时间、金钱或能力以活跃的参与社群活动但我们同时认可及鼓励各种参与方式。我们致力于促进障碍消除及培养能力。我们都是学习者。"
  community-statement3: "我们喜欢以下井号标签：#noCodeSnobs（因为我们重视社群多过效率）、#newKidLove（因为我们都曾经刚起步）、#unassumeCore（因为我们不假设预有知识）及 #BlackLivesMatter（因为当然）。"
  in-practice-title: "实践："
  in-practice1: "我们不假设预有知识也不隐射有些东西是所有人都应该知道的。"
  in-practice2: "我们坚持积极的回应反馈请求，不论它们有多复杂。"
  in-practice3: "我们欢迎新人并且优先考虑其他人的学习。我们致力于将如新人的热情带入我们的工作，因为我们相信新人和专家对我们来说都一样重要。"
  in-practice4: "我们积极的承认及验证各种不同的贡献。"
  in-practice5: "我们永远都愿意给予帮助或指导。"
  in-times-conflict-title: "在起冲突时："
  in-times-conflict1: "我们聆听。"
  in-times-conflict2: "我们清楚地表达自己同时理解其他人的感受。"
  in-times-conflict3: "如果错在我们，我们承认错误、道歉及为我们的举止负责任。"
  in-times-conflict4: "我们会一直寻求方法以改善我们自己及我们的社群。"
  in-times-conflict5: "我们致力于在我们的社群内保持尊敬及开放性。"
  in-times-conflict6: "我们让所有人都感到他们的意见都有被聆听。"
  in-times-conflict7: "在我们的互动中，我们保持细心及友善。"
  in-the-future-title: "在未来："
  in-the-future1: "未来就是现在。"
  contribute-title: "贡献"
  contribute1: "我们的社群都会一直需要各种不同的帮助。"
  develop-title: "开发。"
  develop1: "GitHub"
  develop2: "是源代码被储存、议题被记录及关于代码的谈论发生的主要地方。请参考"
  develop3: "开发教程"
  develop4: "以开始开发代码或"
  develop5: "制作您的附加程式库。"
  document-title: "文献。"
  document1: "所有人都喜欢参考文献。我们需要帮助"
  document2: "移植范例"
  document3: "、"
  document4: "添加参考文献"
  document5: "及制作教程。"
  teach-title: "教学。"
  teach1: "请参阅 wiki 内的"
  teach2: "学习页面"
  teach3: "以参考过去的课程、研讨会及活动。欢迎添加您的链接！"
  create-title: "制作。"
  create1: "p5.js 在寻找设计师、艺术家、代码编程师等以将您具创意及惊人的作业展示在主页上，同时您的作业也能启发其他人。请将您的作业呈交至"
  create2: "feature@p5js.org"
  create3: "。"
  donate-title: "捐献。"
  donate1: "p5.js 是个免费且开源的软件，由一群艺术家所制作。您可捐赠给"
  donate2: "Processing Foundation"
  donate3: "以帮助支持 p5.js 的开发工作。"
  contributors-conference-title: "贡献者会议"
  contributors-conference1: "在2015年，p5.js 举办了第一次"
  contributors-conference2: "贡献者会议"
  contributors-conference3: "。艺术家、设计师、程式开发员、教育家等等在"
  contributors-conference4: "CMU's Studio for Creative Inquiry"
  contributors-conference5: "聚集以让 p5.js 更加精彩。"
  mailing-list-title: "邮件列表"
  mailing-list-1: "请输入您的电子邮件地址以接收偶尔来自 Processing Foundation 的更新消息。"

books:
  books-title: "书籍"

examples:
  Examples: "范例"
  back-examples: "返回"
  Structure: "结构"
  Form: "形状"
  Data: "资料"
  Arrays: "数组"
  Control: "控制"
  Image: "图像"
  Color: "颜色"
  Math: "数学"
  Simulate: "模拟"
  Interaction: "互动"
  Objects: "物件"
  Lights: "灯光"
  Motion: "Motion"
  Instance_Mode: "实例模式"
  Dom: "DOM"
  Drawing: "Drawing"
  Transform: "Transform"
  Typography: "Typography"
  3D: "3D"
  Input: "Input"
  Sound: "音频"
  Advanced_Data: "Advanced Data"
  Mobile: "移动设备"
  Hello_P5: "Hello p5"

contributors-conference:
  contributors-conference-title: "p5.js 贡献者会议"
  contributors-conference-date: "5月25日至31日"
  contributors-conference1: "30个来自各种不同背景的参与者聚集在一起并花了一个星期在"
  contributors-conference2: "提善 p5.js 编程环境的源代码、参考文献及社区外展工具。参与者来自香港、西雅图、洛杉矶、波士顿及纽约，多数都是在创意科技、互动设计及新媒体艺术的职业专家但另外也包括了数位来自 Carnegie Mellon’s Schools of Art and Architecture 的大学本科和研究生。"
  contributors-conference-participants-title: "参与者"
  contributors-conference-diversity-title: "多元平等"
  contributors-conference-diversity1: "在技术开发的同时，这次会议的另外一个主要焦点为推广、社群及多元平等。会议由一个小组会议开始"
  contributors-conference-diversity2: "Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and the Internet"
  contributors-conference-diversity3: "（多元平等：七个在种族、性别、能力及阶级的声音，给 FLOSS（免费与开源软件）及互联网）。"
  contributors-conference-diversity4: "举办者为"
  contributors-conference-diversity5: "及"
  contributors-conference-diversity6: "，"
  contributors-conference-diversity7: "该小组会议发生于2015年5月25日（星期二），地点在 Carnegie Mellon University 的 Kresge Auditorium。演说者包括"
  contributors-conference-diversity8: "及"
  contributors-conference-diversity9: "。"
  contributors-conference-support-title: "支持"
  contributors-conference-support1: "我们的贡献者会议地点位于"
  contributors-conference-support2: "在 Carnegie Mellon University 内，并为一个给非典型、抗学科及跨学院研究的学术实验室，研究重点为艺术、科技及文化的交接。"
  contributors-conference-support3: "这项活动资金来自于"
  contributors-conference-support4: "所提供的资助及来自以下赞助者的慷慨支持："
  contributors-conference-support5: "及"
  contributors-conference-support6: "谢谢！"

reference:
  Reference: "参考文献"
